@model IEnumerable<Core.Concretes.DTOs.ArticleEditorialItem>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table table-striped table-hover" id="articles">
    <thead>
        <tr>
            <th>Başlık</th>
            <th>Kategori</th>
            <th>Yayın Tarihi</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr data-article-id="@item.Id">
                <td>@item.Title</td>
                <td>@item.CategoryInfo.Name</td>
                <td>@(item.PublishDate!=null?((DateTime)item.PublishDate).ToLongDateString():"")</td>
                <td class="text-end">
                    <div class="btn-group" role="group" aria-label="Basic outlined example">
                        @if (item.Draft)
                        {
                            <button type="button" class="btn btn-outline-danger draft-btn" title="Yayınla">
                                <i class="fa-brands fa-firstdraft"></i>
                            </button>
                        }
                        else
                        {
                            <button type="button" class="btn btn-outline-success draft-btn" title="Taslak Haline Getir">
                                <i class="fa-solid fa-upload"></i>
                            </button>
                        }
                        @if (item.Deleted)
                        {
                            <button type="button" class="btn btn-outline-danger delete-btn" title="Geri Getir">
                                <i class="fa-solid fa-recycle"></i>
                            </button>
                        }
                        else
                        {
                            <button type="button" class="btn btn-outline-success delete-btn" title="Kaldır">
                                <i class="fa-solid fa-trash-can"></i>
                            </button>
                        }
                        <a href="@Url.Action("detail","editorarea",new {area="profile",id=item.Id})" class="btn btn-outline-secondary" title="Makale Detayına Git">
                            <i class="fa-solid fa-eye"></i>
                        </a>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>
@section Scripts{
    <!-- JQuery v3.7.1 -->
    <script src="https://code.jquery.com/jquery-3.7.1.js"></script>

    <!-- DataTables v2.3.3 with BS5: https://datatables.net/examples/styling/bootstrap5.html -->
    <script src="https://cdn.datatables.net/2.3.3/js/dataTables.js"></script>
    <script src="https://cdn.datatables.net/2.3.3/js/dataTables.bootstrap5.js"></script>

    <!-- Custom Page Script -->
    <script>
        new DataTable('#articles');

        const draft_buttons = document.querySelectorAll(".draft-btn")

        draft_buttons.forEach(btn => btn.addEventListener("click", () => {
            //Toggle Draft Function
            const row = btn.closest("tr")
            const id = row.getAttribute("data-article-id")
            fetch(`@Url.Action("ToggleDraft","editorarea",new {area="profile"})?articleId=${id}`, { method: "POST" })
                .then(res => res.text())
                .then(text => {
                    const icon = btn.querySelector('i')
                    if (text === "True") {
                        btn.classList.remove("btn-outline-success");
                        btn.classList.add("btn-outline-danger");
                        btn.setAttribute("title", "Yayınla")
                        icon.classList.remove("fa-solid", "fa-upload")
                        icon.classList.add("fa-brands", "fa-firstdraft")
                    } else if (text === "False") {
                        btn.classList.add("btn-outline-success");
                        btn.classList.remove("btn-outline-danger");
                        btn.setAttribute("title", "Taslak Haline Getir")
                        icon.classList.add("fa-solid", "fa-upload")
                        icon.classList.remove("fa-brands", "fa-firstdraft")
                    }
                })
                .catch(err=>console.error("Toggle Draft Error:", err))
        }))

        const delete_buttons = document.querySelectorAll(".delete-btn")

        delete_buttons.forEach(btn => btn.addEventListener("click", () => {
            //Toggle Delete Function
            const row = btn.closest("tr")
            const id = row.getAttribute("data-article-id")
            fetch(`@Url.Action("ToggleDelete","editorarea",new {area="profile"})?articleId=${id}`, { method: "POST" })
                .then(res => res.text())
                .then(text => {
                    const icon = btn.querySelector('i')
                    if (text === "True") {
                        btn.classList.remove("btn-outline-success");
                        btn.classList.add("btn-outline-danger");
                        btn.setAttribute("title", "Geri Getir")
                        icon.classList.remove("fa-trash-can")
                        icon.classList.add("fa-recycle")
                    } else if (text === "False") {
                        btn.classList.add("btn-outline-success");
                        btn.classList.remove("btn-outline-danger");
                        btn.setAttribute("title", "Kaldır")
                        icon.classList.add("fa-trash-can")
                        icon.classList.remove("fa-recycle")
                    }
                })
                .catch(err=>console.error("Toggle Delete Error:", err))
        }))
    </script>
}